# Luke's lf settings

# Basic vars
set shell sh
set previewer ~/.config/lf/scope
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set color256 on

# cmds/functions
cmd open ${{
    case $f in
        *.dig) setsid digital $f >/dev/null 2>&1 &
	exit;;
    esac
    case $(file --mime-type $f -b) in
    	text/troff) man ./ $f;;
        text/*) $EDITOR $fx;;
	image/x-xcf|image/svg+xml) setsid gimp $f >/dev/null 2>&1 & ;;
	image/*) rotdir $f | setsid sxiv -ai >/dev/null 2>&1 & ;;
	audio/*) mpv --input-ipc-server=/tmp/mpvsoc$(date +%%s) $f ;;
	video/*) setsid mpv --input-ipc-server=/tmp/mpvsoc$(date +%%s) $f -quiet >/dev/null 2>&1 & ;;
	application/pdf) setsid zathura $fx >/dev/null 2>&1 & ;;
        *) for f in $fx; do setsid $OPENER $f >/dev/null 2>&1 & done;;
    esac
}}

cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd delete ${{
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/n]"
	read ans
	[ $ans = "y" ] && rm -rf $fx
}}

cmd moveto ${{
	set -f
	clear; echo "Move to where?"
	dest="$(cut -d'	' -f2- ~/.config/bmdirs | fzf)" &&
	eval mv -iv $fx $dest &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	set -f
	clear; echo "Copy to where?"
	dest="$(cut -d'	' -f2- ~/.config/bmdirs | fzf)" &&
	eval cp -ivr $fx $dest &&
	notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

# Adapted from here: https://github.com/gokcehan/lf/issues/149
cmd blkrename ${{
	index=$(mktemp /tmp/lf-bulk-rename-index.XXXXXXXXXX)
	index_edit=$(mktemp /tmp/lf-bulk-rename.XXXXXXXXXX)

	if [ -n "${fs}" ]; then
		echo "$fs" > $index
		cat $index | awk '{ system("basename "$0) }' > $index_edit
	else
		echo "$(ls "$(dirname $f)" | cat)" > $index
		cat $index > $index_edit
	fi

	$EDITOR -c "source $HOME/.config/lf/withdisplay.vim" -O $index_edit $index

	if [ -n "${fs}" ]; then
		# The buffer variable is needed because pasting a file's contents into itself doesn't work
		# The awk script returns the absolute directory of every file in $index_edit
		buffer=$(cat $index_edit | awk '{ system("dirname $(readlink -f "$0")") }' | paste -d "/" - $index_edit)
		echo "$buffer" > $index_edit
	fi

	# To replace newlines stripped by process substitution
	sed -i "s/ \//\n\//g" $index_edit

	if [ $(cat $index | wc -l) -eq $(cat $index_edit | wc -l) ]; then
		 paste $index $index_edit | awk -F"\t" '{ if( $1 != $2 ) { system("mv -n "$1" "$2) } }'
	else
		echo "Number of lines must stay the same"
	fi
	rm $index $index_edit
}}

# Bindings
map c $lf -remote "send $id cd $(cut -d'	' -f2 ~/.config/bmdirs | fzf)"
map J $lf -remote "send $id cd $(cut -d'	' -f2 ~/.config/bmdirs | fzf)"
map E $cut -d'	' -f2 ~/.config/bmfiles | fzf | awk -v home=$HOME '{ gsub("^~", home, $0); print $0 }' | xargs -r -I % $EDITOR %
map gh
map g top
map D delete
map C copyto
map M moveto
map a push %mkdir<space>
map r push :rename<space>
map <enter> shell
map R reload
map x $$f
map X !$f
map o &mimeopen $f
map O $mimeopen --ask $f
map V $sxiv -ft *
map <esc> clear
cmap <up> cmd-history-prev
cmap <down> cmd-history-next
map i $SHOWALL=true ~/.config/lf/scope $f | less +k
